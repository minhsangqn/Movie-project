<!--<script type="text/javascript" charset="utf-8" async="" src="http://ssl.p.jwpcdn.com/player/v/7.8.7/provider.html5.js"></script>-->
<script>window.HELP_IMPROVE_VIDEOJS = false;</script>
<div class="banner-top"></div>
<ol class="breadcrumb">
    <li>
        <a href="/">
            <span>HOME</span>
        </a>
    </li>
    {{#each title_cat}}
        <li>
            <a href="">
                <span>{{this.cat_name_title}}</span>
            </a>
        </li>
    {{/each}}
    <li>
        <a href="">
            <span>{{name}}</span>
        </a>
    </li>
    <li class="active">
        <span id="chapter_number"></span>
        <span>{{arrChapter.num}}</span>
    </li>
</ol>
<div class="row">
    <div class="col-md-8">
        <div class="block_wrapper page_single">
            <div class="jw-video jw-reset">
                <video height="450" id="player" class="jw-video jw-reset"></video>
            </div>
            <div class="user_action">
                <div class="play_actions">
                    <ul class="list-inline">
                        <li><a id="" class="previous_ep_btn">
                            <span class="glyphicon glyphicon-step-forward"></span> Tập Trước</a>
                        </li>
                        <li><a href="" class="next_ep_btn">
                            <span class="glyphicon glyphicon-step-backward"></span> Tập Tiếp Theo</a>
                        </li>
                        <li><a href="" class="next_ep_btn">
                            <span class="glyphicon glyphicon-plus"></span> Theo Dõi</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="box_rating">
                <p>Đánh giá phim<span class="num_rating"> (1 lượt)</span></p>
            </div>
            <div class="box_num">
                <ul class="chap_num">
                    {{#each viewEpi}}
                        <li>
                        <a href="/xem-phim/{{this.id_episode}}-{{this.name_ascii}}/tap-{{this.num}}" class="btn btn_black IdMovie">{{this.num}}</a>
                        </li>
                    {{/each}}
                </ul>
            </div>
        </div>
        <div class="block_wrapper2 page_single block_comment">
            <h4>Bình luận về phim</h4>
        </div>
    </div>
    <div class="col-md-4 sibar_left">
        {{> sibar_left}}
    </div>
</div>
<input type="text" id="data_movie" value="{{chapterone}}" hidden>
<input type="text" id="isUrl" value="{{arrChapter.url}}" hidden>
</div>
<script type="text/javascript" src="/jwplayer-7.12.1/jwplayer.js?v1"></script>
<script type="text/javascript">jwplayer.key="dWwDdbLI0ul1clbtlw+4/UHPxlYmLoE9Ii9QEw==";</script>

<script>
    //loi khi copy link dan vào trình duyệt 2 link thì link thứ 2 không player được
    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        var expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for(var i = 0; i <ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    var player;
    var offset;
    var shouldPlay;
    var idPhim;
    var idPhim1 = "{{IDchapter}}";
    var idPhim2 = "{{idChapterM}}";
    if (idPhim1 === ""){
        idPhim = idPhim2;
    }else{
        idPhim = idPhim1;
    }
    var flagFirstLoad = true;

    setInterval(myTimer, 1000);
    console.log(getCookie(idPhim));

    function myTimer() {
        if(idPhim !== "") {
            if(flagFirstLoad === false) {
                var state = player.getState();
                var elapsed = player.getPosition();

                console.log("LOG:" + state + "/" + elapsed);

                if (elapsed !== undefined && elapsed !== 0)
                    setCookie(idPhim, elapsed, 2);
                console.log("TREN link myTimer:" + idPhim);
            }
        }
    }

    var arrid = document.getElementById("data_movie").value;
    // console.log("ARRID: "+arrid);
    if (arrid !== ''){
        var arr = JSON.parse(arrid);
        var id = arr.id;
        var data = {id};
        $.ajax({
            type:'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            url: 'http://localhost:5000/API/endpoint',
            success:function (data) {
                // console.log('success'+ data);
                document.getElementById("chapter_number").innerHTML = data.chapter_num;
                // console.log("a "+data.chapter_id);
                 player = jwplayer('player').setup({
                    file: data.chapter_url,
                    type: 'mp4',
                    width: '100%',
                    height: 470,
                    autostart: 'true',
                    preload: 'metadata'
                });

                 alert(data.chapter_url);

                flagFirstLoad = false;

                console.log("TREN link 1:"+idPhim);

                var curTime = getCookie(idPhim);
                if(curTime !== undefined && curTime !== "") {
                    offset = parseInt(curTime);
                    shouldPlay = true;
                }

                jwplayer().on('ready', function(event){
                    if(shouldPlay === true){
                        jwplayer().play();
                    }
                });

                jwplayer().on('firstFrame', function() {
                    jwplayer().seek(offset)
                });



                var bumpIt = () => {
                    var vol = player.getVolume();
                    player.setVolume(vol + 10);
                };
                bumpIt();
            }
        });
    }

    var isUrl = document.getElementById("isUrl").value;
    // console.log("CHAPTER: "+isUrl);
    if (isUrl !== '') {
        player = jwplayer('player').setup({
            file: isUrl,
            type: 'mp4',
            width: '100%',
            height: 470,
            autostart: 'true',
            preload: 'metadata'
        });

        alert(isUrl);

        flagFirstLoad = false;

        console.log("TREN link 1:"+idPhim);

        var curTime = getCookie(idPhim);
        if(curTime !== undefined && curTime !== "") {
            offset = parseInt(curTime);
            shouldPlay = true;
        }

        jwplayer().on('ready', function(event){
            if(shouldPlay === true){
                jwplayer().play();
            }
        });

        jwplayer().on('firstFrame', function() {
            jwplayer().seek(offset)
        });





        var bumpIt = () => {
            var vol = player.getVolume();
            player.setVolume(vol + 10);
        };
        bumpIt();
    }
</script>